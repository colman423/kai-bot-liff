{"version":3,"sources":["containers/About.js","icons/mineSweeper.svg","icons/user.svg","components/core/Icon.js","utils/common.js","components/core/Button.js","components/HomeLink.js"],"names":["About","console","log","useEffect","window","location","href","module","exports","ICON_SET","useStyles","makeStyles","theme","root","verticalAlign","CustomIcon","name","alt","props","classes","src","IconList","className","Icon","set","mdProps","defaultProps","getVersion","process","Button","onClick","to","isExternal","component","Link","createStyles","width","border","palette","secondary","light","borderRadius","height","label","textAlign","color","main","icon","fontSize","HomeLink","title","Grid","container","justify","spacing","item","xs"],"mappings":"oHAAA,uCAqBeA,UAff,WAKE,OAJAC,QAAQC,IAAI,cACZC,qBAAU,WACRF,QAAQC,IAAI,gBACX,IAED,kBAAC,WAAD,KACE,6BADF,MAEME,OAAOC,SAASC,KACpB,6BAHF,mB,mBCZJC,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,4NCKrCC,EACC,MADDA,EAEM,WAGNC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,cAAe,cAGbC,EAAa,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,IAAQC,EAAY,8BACxCC,EAAUT,IAChB,OACE,uCAAKU,IAAKC,EAASL,GAAOM,UAAWH,EAAQN,KAAMI,IAAKA,GAAO,IAAQC,KAIrEK,EAAO,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,IAAQN,EAAY,uBAClC,GAAIM,IAAQf,EAAmB,CAAC,IAAD,iBACKS,GAA1BF,EADqB,EACrBA,KAASS,EADY,wBAE7B,OAAO,kBAAC,IAAYA,EAAUT,GAE9B,OAAO,kBAAC,EAAeE,IAO3BK,EAAKG,aAAe,CAClBF,IAAKf,I,gCCjCA,SAASkB,IACd,MAAM,IAAN,OAAWC,QAAX,gCADF,mC,uGCmCeC,EAhCA,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,GAAIC,EAA2B,EAA3BA,WAAed,EAAY,6CACxD,OAAIa,EAEA,kBAAC,IAAD,eACEE,UAAYD,EAAa,IAAME,IAC/B5B,KAAM0B,GAAcD,EACpBA,IAAKC,GAAcD,GACfb,IAKN,kBAAC,IAAD,eACEY,QAASA,GACLZ,KCZNR,G,MAAYC,aAAW,SAACC,GAAD,OAAWuB,YAAa,CACnDtB,KAAM,CACJuB,MAAO,OACPC,OAAO,aAAD,OAAezB,EAAM0B,QAAQC,UAAUC,OAC7CC,aAAc,EACdC,OAAQ,KAEVC,MAAO,CACLC,UAAW,SACXC,MAAOjC,EAAM0B,QAAQC,UAAUO,MAEjCC,KAAM,CACJC,SAAU,GACVH,MAAOjC,EAAM0B,QAAQC,UAAUO,YAkCpBG,IA9BE,SAAC,GAAmC,IAAjClB,EAAgC,EAAhCA,GAAImB,EAA4B,EAA5BA,MAAOH,EAAqB,EAArBA,KACvB5B,GAD4C,qCAClCT,KACVa,EAAOwB,EACb,OACE,kBAAC,EAAD,CAAQhB,GAAIA,EAAIT,UAAWH,EAAQN,KAAMM,QAAS,CAAEwB,MAAOxB,EAAQwB,QACjE,kBAACQ,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,QAAS,GACxC,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAACjC,EAAD,CAAMD,UAAWH,EAAQ4B,QAE3B,kBAACI,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACZN","file":"static/js/7.e9f40304.chunk.js","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { HashRouter, Route, Link } from \"react-router-dom\";\nimport { getVersion } from '../utils/common'\nimport { Grid } from '@material-ui/core';\nimport HomeLink from '../components/HomeLink'\n\nfunction About() {\n  console.log(\"About func\")\n  useEffect(() => {\n    console.log(\"About init\")\n  }, [])\n  return (\n    <Fragment>\n      <br />\n      2. {window.location.href}\n      <br />\n      THIS IS about\n    </Fragment>\n  );\n}\n\nexport default About;\n","module.exports = __webpack_public_path__ + \"static/media/mineSweeper.984e9636.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.afcc9b05.svg\";","import React from 'react'\nimport PropTypes from 'prop-types'\nimport * as IconList from '../../icons'\nimport { Icon as MuiIcon, makeStyles } from '@material-ui/core'\n\nconst ICON_SET = {\n  KAI: 'kai',\n  MATERIAL: 'material'\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    verticalAlign: 'middle'\n  }\n}))\nconst CustomIcon = ({ name, alt, ...props }) => {\n  const classes = useStyles();\n  return (\n    <img src={IconList[name]} className={classes.root} alt={alt || \"\"} {...props} />\n  )\n}\n\nconst Icon = ({ set, ...props }) => {\n  if (set === ICON_SET.MATERIAL) {\n    const { name, ...mdProps } = { ...props }\n    return <MuiIcon {...mdProps}>{name}</MuiIcon>\n  } else {\n    return <CustomIcon {...props} />\n  }\n}\nIcon.propTypes = {\n  set: PropTypes.oneOf(Object.values(ICON_SET)).isRequired,\n  name: PropTypes.string.isRequired\n}\nIcon.defaultProps = {\n  set: ICON_SET.KAI\n}\n\nexport default Icon\n","import preval from 'preval.macro'\n\nexport function getVersion() {\n  return `v${process.env.REACT_APP_VERSION} ${preval`module.exports = new Date().toISOString();`}`\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { Button as MuiBtn } from '@material-ui/core'\n\nconst Button = ({ onClick, to, isExternal, ...props }) => {\n  if (to) {\n    return (\n      <MuiBtn\n        component={(isExternal ? 'a' : Link)}\n        href={isExternal && to}\n        to={!isExternal && to}\n        {...props}\n      />\n    )\n  } else {\n    return (\n      <MuiBtn\n        onClick={onClick}\n        {...props}\n      />\n    )\n  }\n}\nButton.propTypes = {\n  onClick: (props, propName, componentName) => {\n    if (props.to && props.onClick) {\n      return new Error('Choose at most one of `to` and `onClick`')\n    }\n  },\n  isExternal: (props, propName, componentName) => {\n    if (!props.to && props.isExternal) {\n      return new Error('`isExternal` only work in Link')\n    }\n  }\n}\n\nexport default Button\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { makeStyles, createStyles, Typography, Grid, Box } from '@material-ui/core';\nimport Button from './core/Button'\nimport Icon from './core/Icon';\n\nconst useStyles = makeStyles((theme) => createStyles({\n  root: {\n    width: '100%',\n    border: `2px solid ${theme.palette.secondary.light}`,\n    borderRadius: 4,\n    height: 150,\n  },\n  label: {\n    textAlign: 'center',\n    color: theme.palette.secondary.main\n  },\n  icon: {\n    fontSize: 50,\n    color: theme.palette.secondary.main\n  }\n}));\n\nconst HomeLink = ({ to, title, icon, ...props }) => {\n  const classes = useStyles()\n  const Icon = icon\n  return (\n    <Button to={to} className={classes.root} classes={{ label: classes.label }}>\n      <Grid container justify=\"center\" spacing={1}>\n        <Grid item xs={12}>\n          <Icon className={classes.icon} />\n        </Grid>\n        <Grid item xs={12}>\n          {title}\n        </Grid>\n      </Grid>\n    </Button>\n  )\n\n}\nHomeLink.propTypes = {\n  onClick: (props, propName, componentName) => {\n    if (props.to && props.onClick) {\n      return new Error('Choose at most one of `to` and `onClick`')\n    }\n  },\n  isExternal: (props, propName, componentName) => {\n    if (!props.to && props.isExternal) {\n      return new Error('`isExternal` only work in Link')\n    }\n  }\n}\n\nexport default HomeLink\n"],"sourceRoot":""}